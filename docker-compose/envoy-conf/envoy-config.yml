static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8081 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                stream_idle_timeout: 0s # disable idle timeout for long streams
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ['*']
                      routes:
                        - match: { prefix: '/' }
                          route: { cluster: grpc_service, max_grpc_timeout: 0s }
                          # **PER-ROUTE** CORS POLICY
                          typed_per_filter_config:
                            envoy.filters.http.cors:
                              '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                              allow_origin_string_match:
                                - safe_regex: { google_re2: {}, regex: '.*' }
                              allow_methods: 'GET, POST, OPTIONS'
                              allow_headers: 'Content-Type,x-grpc-web,x-user-agent'
                              max_age: '1728000'

                http_filters:
                  # **Filter** that applies the policy
                  - name: envoy.filters.http.cors
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: grpc_service
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      load_assignment:
        cluster_name: grpc_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    # socket_address: { address: 127.0.0.1, port_value: 9090 }
                    socket_address:
                      address: 127.0.0.1 # or 127.0.0.1
                      port_value: 9090
admin:
  access_log_path: /tmp/envoy_admin.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }


# TODO
#http_filters:
#  - name: envoy.filters.http.jwt_authn
#    typed_config:
#      providers:
#        auth0:
#          issuer: https://your-auth/
#          remote_jwks:
#            http_uri: { uri: https://your-auth/.well-known/jwks.json, cluster: jwks_cluster }
#          forward: true
#      rules:
#        - match: { prefix: "/stats" }
#          requires: { provider_name: "auth0", demands: [ { exact: "ROLE_STATS_READ", header: { name: "authorization" }} ] }
#        - match: { prefix: "/live" }
#          requires: { provider_name: "auth0", demands: [ { exact: "ROLE_LIVE_READ", header: { name: "authorization" }} ] }